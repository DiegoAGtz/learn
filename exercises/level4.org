#+TITLE: Exercises Level 4
#+AUTOR: DiegoAGtz
#+DESCRIPTION: Exercises to learn GO.

* Exercise 1
Usando un composite literal
+ Crea un arreglo de tipo int el cual tenga 5 valores
+ Itera con range sobre el arreglo e imprime los valores
+ Imprime el tipo del arreglo

#+BEGIN_SRC go
package main

import "fmt"

func main() {
    x := [5]int { 0, 9, 7, 2, 1 }
    for i, v := range x {
        fmt.Printf("Indice: %v - Valor: %v\n", i, v)
    }
    fmt.Printf("Tipo de variable: %T\n", x)
}
#+END_SRC

* Exercise 2
    Usando un composite literal
        Crea un slice de tipo int 
        Asigna 10 valores
    Itera con range sobre el slice e imprime los valores
    Imprime el tipo del arreglo

#+BEGIN_SRC go
package main
import "fmt"

func main() {
    x := []int { 0, 9, 7, 2, 1, 10, 99, 921, 3, 4 }
    for i, v := range x {
        fmt.Printf("Indice: %v - Valor: %v\n", i, v)
    }
    fmt.Printf("Tipo de variable: %T\n", x)
}
#+END_SRC

* Exercise 3
    Crea un slice con valores del 42 al 51 y, usando slicing, imprime
    cada uno de los siguientes slices
        [42 43 44 45 46]
        [47 48 49 50 51]
        [44 45 46 47 48]
        [43 44 45 46 47]

#+BEGIN_SRC go
package main
import "fmt"

func main() {
    x := []int { 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
    fmt.Println(x[:5])
    fmt.Println(x[5:])
    fmt.Println(x[2:7])
    fmt.Println(x[1:6])
}
#+END_SRC

* Exercise 4
    Sigue los siguientes pasos:
        Comienza con este slice:
            x := []int { 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
        Agregale el siguiente valor
            52
        Imprime el slice
        En una declaración, agrega los siguientes valores
            53 54 55
        Imprime el slice
        Agrega al slice los siguientes valores
            y := []int { 56, 57, 58, 59, 60 }
        Imprime el slice

#+BEGIN_SRC go
package main
import "fmt"

func main() {
    x := []int { 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
    x = append(x, 52)

    fmt.Println(x)

    x = append(x, 53, 54, 55)
    fmt.Println(x)

    y := []int { 56, 57, 58, 59, 60 }
    x = append(x, y...)
    fmt.Println(x)
}
#+END_SRC

* Exercise 5
    Para borrar elementos de un slice, usamos append en conjunto
    con slicing (dividir). Para este ejercicio, sigue los siguientes pasos

    Comienza con un slice
        x := []int { 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
    Usa append y slicing para obtener los siguientes valores, los cuales, 
    debes asignar a una variable "y" y luego imprimir.
        { 42, 43, 44, 48, 49, 50, 51 }

#+BEGIN_SRC go
package main
import "fmt"

func main() {
    x := []int { 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
    y := append(x[:3] , x[6:]...)
    
    fmt.Println(y)
}
#+END_SRC

* Exercise 6
    Crear un slice para almacenar los nombres de todos los estados en los
    Estados Unidos de America. ¿Cuál es la longitud del slice?¿Cuál es la
    capacidad del Slice? Imprime todos los valores con su índice de 
    posición, sin utilizar la cláusula range. Aquí la lista de los estados:

    ` Alabama`, ` Alaska`, ` Arizona`, ` Arkansas`, ` California`, 
    ` Colorado`, ` Connecticut`, ` Delaware`, ` Florida`, ` Georgia`,
    ` Hawaii`, ` Idaho`, ` Illinois`, ` Indiana`, ` Iowa`, ` Kansas`,
    ` Kentucky`, ` Louisiana`, ` Maine`, ` Maryland`, ` Massachusetts`,
    ` Michigan`, ` Minnesota`, ` Mississippi`, ` Missouri`, ` Montana`, 
    ` Nebraska`, ` Nevada`, ` New Hampshire`, ` New Jersey`, ` New Mexico`,
    ` New York`, ` North Carolina`, ` North Dakota`, ` Ohio`, ` Oklahoma`,
    ` Oregon`, ` Pennsylvania`, ` Rhode Island`, ` South Carolina`, 
    ` South Dakota`, ` Tennessee`, ` Texas`, ` Utah`, ` Vermont`, 
    ` Virginia`, ` Washington`, ` West Virginia`, ` Wisconsin`, ` Wyoming`

#+BEGIN_SRC go
package main
import "fmt"

func main() {
    x := make([]string, 50, 50)
x = []string{` Alabama`, ` Alaska`, ` Arizona`, ` Arkansas`, ` California`, ` Colorado`, ` Connecticut`, ` Delaware`, ` Florida`, ` Georgia`, ` Hawaii`, ` Idaho`, ` Illinois`, ` Indiana`, ` Iowa`, ` Kansas`, ` Kentucky`, ` Louisiana`, ` Maine`, ` Maryland`, ` Massachusetts`, ` Michigan`, ` Minnesota`, ` Mississippi`, ` Missouri`, ` Montana`, ` Nebraska`, ` Nevada`, ` New Hampshire`, ` New Jersey`, ` New Mexico`, ` New York`, ` North Carolina`, ` North Dakota`, ` Ohio`, ` Oklahoma`, ` Oregon`, ` Pennsylvania`, ` Rhode Island`, ` South Carolina`, ` South Dakota`, ` Tennessee`, ` Texas`, ` Utah`, ` Vermont`, ` Virginia`, ` Washington`, ` West Virginia`, ` Wisconsin`, ` Wyoming`}
    fmt.Println(len(x))
    fmt.Println(cap(x))

    for i := 0; i < len(x); i++ {
        fmt.Printf("Indice: %v\tEstado: %v\n", i, x[i])
    }
}
#+END_SRC

* Exercise 7
    Crear un slice de slice de string. Almacena los siguientes valores
    en un slice multi-dimensional:
        "Batman", "Jefe", "Vestido de negro"
        "Robin", "Ayudante", "Vestido de colores"
    Haz range sobre ellos, luego sobre los datos de cada elemento

#+BEGIN_SRC go
package main
import "fmt"

func main() {
    gotham := [][]string { {"Batman", "Jefe", "Vestido de negro"}, {"Robin", "Ayudante", "Vestido de colores"} }

    for i, v1 := range gotham {
        fmt.Println("Slice numero: ", i)
        for _, v2 := range v1 {
            fmt.Printf("\t\t %v\n", v2)
        }
    }
}
#+END_SRC

* Exercise 8
    Crea un mapa con una llave tipo string el cual representa el 
    "nombre_apellido" de una persona y un vlaor de tipo []string el cual
    almacena sus cosas favoritas. Almacena tres registros en tu mapa. 
    Imprime todos sus valores con su índice de posición en el slice
    "eduar_tua", "computadoras", "montaña", "playa"
    "carlos_ramon", "leer", "comprar", "musica"
    "juan_bimba", "helado", "pintar", "bailar"

#+BEGIN_SRC go
package main
import "fmt"

func main() {
    x := map[string][]string {
        "eduar_tura"    : {"computadoras", "montaña", "playa"},
        "carlos_ramon"  : {"leer", "comprar", "musica"},
        "juan_bimba"    : {"helado", "pintar", "bailar"},
    }

    for i, v1 := range x {
        fmt.Println("Llave:", i)
        for j, v2 := range v1 {
            fmt.Printf("\tIndice: %v\tValor: %v\n", j, v2)
        }
    }
}
#+END_SRC

* Exercise 9
    Usando el código del ejercicio anterior, agrega un registro a tu mapa,
    ahora imprime el mapa usando range
#+BEGIN_SRC go
package main
import "fmt"

func main() {
    x := map[string][]string {
        "eduar_tura"    : {"computadoras", "montaña", "playa"},
        "carlos_ramon"  : {"leer", "comprar", "musica"},
        "juan_bimba"    : {"helado", "pintar", "bailar"},
    }

    x["AG"] = []string { "programar", "jugar", "leer" }

    for i, v1 := range x {
        fmt.Println("Llave:", i)
        for j, v2 := range v1 {
            fmt.Printf("\tIndice: %v\tValor: %v\n", j, v2)
        }
    }
}
#+END_SRC

* Exercise 10
Usando el código del ejercicio anterior, elimina un registro a tu mapa,
    ahora imprime el mapa usando range
#+BEGIN_SRC go
package main
import "fmt"

func main() {
    x := map[string][]string {
        "eduar_tura"    : {"computadoras", "montaña", "playa"},
        "carlos_ramon"  : {"leer", "comprar", "musica"},
        "juan_bimba"    : {"helado", "pintar", "bailar"},
    }

    x["diego_gtz"] = []string { "programar", "jugar", "leer" }
    if v, ok := x["diego_gtz"]; ok {
        fmt.Println("Se borro la llave diego_gtz con valor:", v)
        delete(x, "diego_gtz")
    }

    for i, v1 := range x {
        fmt.Println("Llave:", i)
        for j, v2 := range v1 {
            fmt.Printf("\tIndice: %v\tValor: %v\n", j, v2)
        }
    }
}
#+END_SRC